# swagger
# change order & delivery
# fix feign & eureka

#mongodb
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=pizza-orders

#logging
logging.level.org.springframework.data=debug
logging.level.=error

server.port = 8083

spring.cloud.stream.defaultBinder = kafka
spring.cloud.stream.binders.kafka.type = kafka
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.brokers = localhost:9092
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.zkNodes = localhost:2181
spring.cloud.stream.kafka.binder.autoAddPartitions = true
spring.cloud.stream.kafka.bindings.ORDER_REQUEST_INPUT.consumer.autoCommitOffset = true
spring.cloud.stream.kafka.bindings.ORDER_REQUEST_INPUT.consumer.autoCommitOnError = true
spring.cloud.stream.kafka.bindings.ORDER_REQUEST_INPUT.consumer.enableDlq = true
spring.cloud.stream.kafka.bindings.ORDER_REQUEST_INPUT.consumer.configuration.max.poll.interval.ms = 2147483647
spring.cloud.stream.kafka.bindings.ORDER_REQUEST_INPUT.consumer.configuration.session.timeout.ms = 300000
spring.cloud.stream.kafka.bindings.ORDER_REQUEST_INPUT.consumer.configuration.heartbeat.interval.ms = 60000                       
spring.cloud.stream.bindings.ORDER_REQUEST_INPUT.binder = kafka
spring.cloud.stream.bindings.ORDER_REQUEST_INPUT.content-type = application/json
spring.cloud.stream.bindings.ORDER_REQUEST_INPUT.group = order_request_group
spring.cloud.stream.bindings.ORDER_REQUEST_INPUT.destination = ORDER_REQUEST
#spring.cloud.stream.bindings.ORDER_REQUEST_OUTPUT.binder = kafka
#spring.cloud.stream.bindings.ORDER_REQUEST_OUTPUT.content-type = application/json
#spring.cloud.stream.bindings.ORDER_REQUEST_OUTPUT.destination = ORDER_REQUEST

spring.cloud.stream.kafka.bindings.ORDER_STATUS_INPUT.consumer.autoCommitOffset = true
spring.cloud.stream.kafka.bindings.ORDER_STATUS_INPUT.consumer.autoCommitOnError = true
spring.cloud.stream.kafka.bindings.ORDER_STATUS_INPUT.consumer.enableDlq = true
spring.cloud.stream.kafka.bindings.ORDER_STATUS_INPUT.consumer.configuration.max.poll.interval.ms = 2147483647
spring.cloud.stream.kafka.bindings.ORDER_STATUS_INPUT.consumer.configuration.session.timeout.ms = 300000
spring.cloud.stream.kafka.bindings.ORDER_STATUS_INPUT.consumer.configuration.heartbeat.interval.ms = 60000                       
#spring.cloud.stream.bindings.ORDER_STATUS_INPUT.binder = kafka
#spring.cloud.stream.bindings.ORDER_STATUS_INPUT.content-type = application/json
#spring.cloud.stream.bindings.ORDER_STATUS_INPUT.group = status_request_group
#spring.cloud.stream.bindings.ORDER_STATUS_INPUT.destination = STATUS_CHANGE
#spring.cloud.stream.bindings.ORDER_STATUS_OUTPUT.binder = kafka
#spring.cloud.stream.bindings.ORDER_STATUS_OUTPUT.content-type = application/json
#spring.cloud.stream.bindings.ORDER_STATUS_OUTPUT.destination = STATUS_CHANGE